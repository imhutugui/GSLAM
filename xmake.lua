add_rules("mode.debug", "mode.release")

package("iris_lama")
    add_deps("cmake", "eigen")
    set_sourcedir(path.join(os.scriptdir(), "iris_lama"))
    on_install(function (package)
        local configs = {}
        table.insert(configs, "-DCMAKE_BUILD_TYPE=" .. (package:debug() and "Debug" or "Release"))
        table.insert(configs, "-DBUILD_SHARED_LIBS=" .. (package:config("shared") and "ON" or "OFF"))
        import("package.tools.cmake").install(package, configs, {packages = "eigen"})
    end)
    -- on_test(function (package)
    --     assert(package:has_cfuncs("add", {includes = "foo.h"}))
    -- end)
package_end()

set_runtimes("MD")
add_requires("opencv", "eigen", "glog", "glew", "glu", "sophus", "g2o", "openssl")
add_requires("boost", {configs = {system = true}})
add_requires("vcpkg::pangolin", {configs = { shared = true}})
add_requires("iris_lama")
-- add_requires("vcpkg::libqglviewer")
includes("@builtin/check")
set_languages("c99", "c++17")

target("gslam")
    set_kind("binary")
    add_includedirs("./")
    add_files("GSLAM/gslam/*.cpp")
    add_defines("NOMINMAX")

target("gslam_qviz")
    add_rules("qt.shared")
    add_includedirs("./")
    add_includedirs("GSLAM/plugins/qviz/mainwindow")
    add_files("GSLAM/plugins/qviz/mainwindow/*.cpp")
    add_files("GSLAM/plugins/qviz/mainwindow/MainWindow.h")
    add_files("GSLAM/plugins/qviz/mainwindow/*.qrc")
    add_defines("NOMINMAX", "WIN32")
    add_cxflags("/MD")
    add_frameworks("QtCore", "QtWidgets", "QtGui", "QtNetwork", "QtXml", "QtOpenGL")

target("gslam_resource")
    set_kind("shared")
    add_includedirs("./")
    add_files("GSLAM/plugins/resource/main.cpp")
    add_defines("NOMINMAX")

target("gslam_doc")
    set_kind("shared")
    add_includedirs("./")
    add_files("GSLAM/plugins/doc/main.cpp")
    add_defines("NOMINMAX")

target("gslam_play")
    set_kind("shared")
    add_includedirs("./")
    add_files("GSLAM/plugins/play/main.cpp")
    add_defines("NOMINMAX")

target("gslam_gmap")
    set_kind("shared")
    add_includedirs("./")
    add_includedirs("GSLAM/plugins/gmap")
    add_files("GSLAM/plugins/gmap/*.cpp")
    add_defines("NOMINMAX")

target("gslam_topic")
    set_kind("shared")
    add_includedirs("./")
    add_files("GSLAM/plugins/topic/main.cpp")
    add_defines("NOMINMAX")

target("qviz_panel_win3d")
    set_rules("qt.shared")
    add_includedirs("./")
    add_includedirs("GSLAM/plugins/qviz/panels/win3d/QGLViewer")
    add_files("GSLAM/plugins/qviz/panels/win3d/**.cpp")
    add_files("GSLAM/plugins/qviz/panels/win3d/**.h")
    add_files("GSLAM/plugins/qviz/panels/win3d/QGLViewer/*.ui")
    add_defines("NOMINMAX")
    add_packages("glew", "glu")
    add_cxflags("/MD")
    add_frameworks("QtCore", "QtWidgets", "QtGui", "QtOpenGL", "QtXml")

target("qviz_panel_displays")
    set_rules("qt.shared")
    add_includedirs("./")
    add_includedirs("GSLAM/plugins/qviz/panels/displays")
    add_files("GSLAM/plugins/qviz/panels/displays/*.cpp")
    add_files("GSLAM/plugins/qviz/panels/displays/**.h")
    add_files("GSLAM/plugins/qviz/panels/displays/displays.qrc")
    add_defines("NOMINMAX")
    add_packages("glew", "glu")
    add_cxflags("/MD")
    add_frameworks("QtCore", "QtWidgets", "QtGui", "QtOpenGL", "QtXml")

target("qviz_panel_frameinfo")
    set_rules("qt.shared")
    add_includedirs("./")
    add_includedirs("GSLAM/plugins/qviz/panels/frameinfo")
    add_files("GSLAM/plugins/qviz/panels/frameinfo/*.cpp")
    add_files("GSLAM/plugins/qviz/panels/frameinfo/FrameVisualizer.h")
    add_defines("NOMINMAX", "HAS_QT", "HAS_OPENCV3")
    add_packages("glew", "glu", "opencv")
    add_cxflags("/MD")
    add_frameworks("QtCore", "QtWidgets", "QtGui")

target("qviz_panel_pubsubs")
    set_rules("qt.shared")
    add_includedirs("./")
    add_includedirs("GSLAM/plugins/qviz/panels/pubsubs")
    add_files("GSLAM/plugins/qviz/panels/pubsubs/*.cpp")
    add_files("GSLAM/plugins/qviz/panels/pubsubs/PanelPubSubs.h")
    add_files("GSLAM/plugins/qviz/panels/pubsubs/mapviz.qrc")
    add_defines("NOMINMAX")
    add_cxflags("/MD")
    add_frameworks("QtCore", "QtWidgets", "QtGui")
    
target("qviz_panel_logger")
    set_rules("qt.shared")
    add_includedirs("./")
    add_includedirs("GSLAM/plugins/qviz/panels/logger")
    add_files("GSLAM/plugins/qviz/panels/logger/*.cpp")
    add_files("GSLAM/plugins/qviz/panels/logger/*.h")
    add_defines("NOMINMAX")
    add_cxflags("/MD")
    add_frameworks("QtCore", "QtWidgets", "QtGui")

target("qviz_display_map")
    set_rules("qt.shared")
    add_includedirs("./")
    add_includedirs("GSLAM/plugins/qviz/displays/mapviz")
    add_files("GSLAM/plugins/qviz/displays/mapviz/*.cpp")
    add_files("GSLAM/plugins/qviz/displays/mapviz/mapviz.qrc")
    add_defines("NOMINMAX")
    add_cxflags("/MD")
    add_frameworks("QtCore", "QtWidgets", "QtGui")

target("qviz_display_traj")
    set_rules("qt.shared")
    add_includedirs("./")
    add_files("GSLAM/plugins/qviz/displays/trajviz/*.cpp")
    add_defines("NOMINMAX")
    add_cxflags("/MD")
    add_frameworks("QtCore", "QtWidgets", "QtGui")

target("gslamDB_euroc")
    set_rules("qt.shared")
    add_includedirs("./")
    add_includedirs("GSLAM/core")
    add_includedirs("GSLAM/plugins/datasets")
    add_files("GSLAM/plugins/datasets/DataSetEuroc.cpp")
    add_defines("NOMINMAX", "HAS_OPENCV3", "WIN32")
    add_cxflags("/MD")
    add_packages("opencv")

target("gslamDB_kitti")
    set_rules("qt.shared")
    add_includedirs("./")
    add_includedirs("GSLAM/core")
    add_includedirs("GSLAM/plugins/datasets")
    add_files("GSLAM/plugins/datasets/DatasetKITTI.cpp")
    add_defines("NOMINMAX", "HAS_OPENCV3", "WIN32")
    add_cxflags("/MD")
    add_packages("opencv")

target("gslamDB_npudronemap")
    set_rules("qt.shared")
    add_includedirs("./")
    add_includedirs("GSLAM/core")
    add_includedirs("GSLAM/plugins/datasets")
    add_files("GSLAM/plugins/datasets/DatasetNPUDroneMap.cpp")
    add_defines("NOMINMAX", "HAS_OPENCV3", "WIN32")
    add_cxflags("/MD")
    add_packages("opencv")

target("gslamDB_npurgbd")
    set_rules("qt.shared")
    add_includedirs("./")
    add_includedirs("GSLAM/core")
    add_includedirs("GSLAM/plugins/datasets")
    add_files("GSLAM/plugins/datasets/DatasetNPURGBD.cpp")
    add_defines("NOMINMAX", "HAS_OPENCV3", "WIN32")
    add_cxflags("/MD")
    add_packages("opencv")

target("gslamDB_cvmono")
    set_rules("qt.shared")
    add_includedirs("./")
    add_includedirs("GSLAM/core")
    add_includedirs("GSLAM/plugins/datasets")
    add_files("GSLAM/plugins/datasets/DatasetOpenCVMono.cpp")
    add_defines("NOMINMAX", "HAS_OPENCV3", "WIN32")
    add_cxflags("/MD")
    add_packages("opencv")

target("gslamDB_rtm")
    set_rules("qt.shared")
    add_includedirs("./")
    add_includedirs("GSLAM/core")
    add_includedirs("GSLAM/plugins/datasets")
    add_files("GSLAM/plugins/datasets/DatasetRTMapper.cpp")
    add_defines("NOMINMAX", "HAS_OPENCV3", "WIN32")
    add_cxflags("/MD")
    add_packages("opencv")

target("gslamDB_tummono")
    set_rules("qt.shared")
    add_includedirs("./")
    add_includedirs("GSLAM/core")
    add_includedirs("GSLAM/plugins/datasets")
    add_files("GSLAM/plugins/datasets/DatasetTUMMono.cpp")
    add_defines("NOMINMAX", "HAS_OPENCV3", "WIN32")
    add_cxflags("/MD")
    add_packages("opencv")

target("gslamDB_tumrgbd")
    set_rules("qt.shared")
    add_includedirs("./")
    add_includedirs("GSLAM/core")
    add_includedirs("GSLAM/plugins/datasets")
    add_files("GSLAM/plugins/datasets/DatasetTUMRGBD.cpp")
    add_defines("NOMINMAX", "HAS_OPENCV3", "WIN32")
    add_cxflags("/MD")
    add_packages("opencv")

target("svar_ecal")
    set_kind("shared")
    add_includedirs("D:/Programs/eCAL/include")
    add_includedirs("svar_nsq/ecal")
    add_includedirs("svar_nsq/protos")
    add_files("svar_nsq/ecal/*_serializer.cpp")
    add_files("svar_nsq/ecal/main.cpp")
    add_files("svar_nsq/protos/*.pb.cc")
    add_syslinks("ecal_core", "libprotobuf", "bcrypt")
    add_linkdirs("D:/Programs/eCAL/lib")
    add_cxflags("/MD")
    add_packages("boost", {configs = {system = true}})

target("svar_main")
    set_kind("binary")
    add_includedirs("D:/Programs/eCAL/include")
    add_includedirs("svar_nsq/ecal")
    add_includedirs("svar_nsq/protos")
    add_files("svar_nsq/ecal/*_serializer.cpp")
    add_files("svar_nsq/ecal/main.cpp")
    add_files("svar_nsq/protos/*.pb.cc")
    add_syslinks("ecal_core", "libprotobuf", "bcrypt")
    add_linkdirs("D:/Programs/eCAL/lib")
    add_cxflags("/MD")
    add_packages("boost", {configs = {system = true}})
    